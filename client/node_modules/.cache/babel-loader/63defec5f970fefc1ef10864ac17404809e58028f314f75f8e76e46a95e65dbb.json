{"ast":null,"code":"var _jsxFileName = \"/Users/samuelm/fitness-tracker/client/src/pages/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button } from '@mui/material';\nimport auth from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    height: '',\n    weight: ''\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await auth.register(formData);\n      navigate('/login');\n    } catch (err) {\n      alert('Registration failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Name\",\n      onChange: e => setFormData({\n        ...formData,\n        name: e.target.value\n      }),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      type: \"email\",\n      onChange: e => setFormData({\n        ...formData,\n        email: e.target.value\n      }),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      onChange: e => setFormData({\n        ...formData,\n        password: e.target.value\n      }),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"cpGBCp1pAZkG84Jx2hHiObf0Nh8=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","TextField","Button","auth","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","name","email","password","height","weight","navigate","handleSubmit","e","preventDefault","register","err","alert","onSubmit","children","label","onChange","target","value","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","variant","color","_c","$RefreshReg$"],"sources":["/Users/samuelm/fitness-tracker/client/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button } from '@mui/material';\nimport auth from '../services/auth';\n\nexport default function Register() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    height: '',\n    weight: '',\n  });\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await auth.register(formData);\n      navigate('/login');\n    } catch (err) {\n      alert('Registration failed');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Name\"\n        onChange={(e) => setFormData({...formData, name: e.target.value})}\n        fullWidth\n        margin=\"normal\"\n      />\n      <TextField\n        label=\"Email\"\n        type=\"email\"\n        onChange={(e) => setFormData({...formData, email: e.target.value})}\n        fullWidth\n        margin=\"normal\"\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        onChange={(e) => setFormData({...formData, password: e.target.value})}\n        fullWidth\n        margin=\"normal\"\n      />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        Register\n      </Button>\n    </form>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,OAAOC,IAAI,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IACvCW,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMf,IAAI,CAACgB,QAAQ,CAACX,QAAQ,CAAC;MAC7BO,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZC,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEhB,OAAA;IAAMiB,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAC3BlB,OAAA,CAACJ,SAAS;MACRuB,KAAK,EAAC,MAAM;MACZC,QAAQ,EAAGR,CAAC,IAAKR,WAAW,CAAC;QAAC,GAAGD,QAAQ;QAAEE,IAAI,EAAEO,CAAC,CAACS,MAAM,CAACC;MAAK,CAAC,CAAE;MAClEC,SAAS;MACTC,MAAM,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACF5B,OAAA,CAACJ,SAAS;MACRuB,KAAK,EAAC,OAAO;MACbU,IAAI,EAAC,OAAO;MACZT,QAAQ,EAAGR,CAAC,IAAKR,WAAW,CAAC;QAAC,GAAGD,QAAQ;QAAEG,KAAK,EAAEM,CAAC,CAACS,MAAM,CAACC;MAAK,CAAC,CAAE;MACnEC,SAAS;MACTC,MAAM,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACF5B,OAAA,CAACJ,SAAS;MACRuB,KAAK,EAAC,UAAU;MAChBU,IAAI,EAAC,UAAU;MACfT,QAAQ,EAAGR,CAAC,IAAKR,WAAW,CAAC;QAAC,GAAGD,QAAQ;QAAEI,QAAQ,EAAEK,CAAC,CAACS,MAAM,CAACC;MAAK,CAAC,CAAE;MACtEC,SAAS;MACTC,MAAM,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACF5B,OAAA,CAACH,MAAM;MAACgC,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAAAb,QAAA,EAAC;IAE1D;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAAC1B,EAAA,CA/CuBD,QAAQ;EAAA,QAQbN,WAAW;AAAA;AAAAqC,EAAA,GARN/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}